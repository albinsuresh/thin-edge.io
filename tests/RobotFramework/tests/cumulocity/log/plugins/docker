#!/bin/bash

set -euo pipefail

usage() {
    echo "Usage: $0 <command> [args...]"
    echo "Commands:"
    echo "  list                                                      List all log types supported by this plugin"
    echo "  get <type> <target-log-file-path> [--since <timestamp>]   Get logs for the specified container"
    echo "      [--until <timestamp>] [--filter <filter-text>]"
    echo "      [--tail <lines-from-end>]"
    exit 1
}

list_log_types() {
    # Check if docker is available and running
    if ! command -v docker &> /dev/null; then
        return 0
    fi
    
    # List all containers (both running and stopped) and get their names
    # Skip containers without names or with auto-generated names
    docker ps -a --format "{{.Names}}" 2>/dev/null | \
        grep -v '^$' | \
        sort -u
}

get_logs() {
    if ! command -v docker &> /dev/null; then
        echo "Error: docker command not found" >&2
        exit 1
    fi
    
    local container_name="$1"
    local temp_file="$2"
    shift 2
    
    local since_arg=""
    local until_arg=""
    local filter_arg=""
    local tail_arg=""
    
    # Parse optional arguments
    while [[ $# -gt 0 ]]; do
        case $1 in
            --since)
                since_arg="--since=$2"
                shift 2
                ;;
            --until)
                until_arg="--until=$2"
                shift 2
                ;;
            --filter)
                filter_arg="$2"
                shift 2
                ;;
            --tail)
                tail_arg="--tail=$2"
                shift 2
                ;;
            *)
                echo "Unknown option: $1" >&2
                exit 1
                ;;
        esac
    done
    
    # Check if container exists
    if ! docker ps -a --format "{{.Names}}" | grep -q "^${container_name}$"; then
        echo "Error: Container '${container_name}' not found" >&2
        exit 1
    fi
    
    # Build docker logs command
    local cmd="docker logs"
    
    # Add timestamps
    cmd="$cmd --timestamps"
    
    # Add time range filters
    if [[ -n "$since_arg" ]]; then
        cmd="$cmd $since_arg"
    fi
    
    if [[ -n "$until_arg" ]]; then
        cmd="$cmd $until_arg"
    fi
    
    # Add tail limit
    if [[ -n "$tail_arg" ]]; then
        cmd="$cmd $tail_arg"
    fi
    
    # Add container name
    cmd="$cmd $container_name"
    
    # Execute docker logs and apply text filter if specified
    if [[ -n "$filter_arg" ]]; then
        eval "$cmd" 2>&1 | grep -i "$filter_arg" > "$temp_file" || true
    else
        eval "$cmd" > "$temp_file" 2>&1 || true
    fi
}

main() {
    if [[ $# -lt 1 ]]; then
        usage
    fi
    
    local command="$1"
    shift
    
    case "$command" in
        "list")
            list_log_types
            ;;
        "get")
            if [[ $# -lt 2 ]]; then
                echo "Error: 'get' command requires <type> and <target-log-file-path> arguments" >&2
                exit 1
            fi
            get_logs "$@"
            ;;
        *)
            echo "Error: Unknown command '$command'" >&2
            usage
            ;;
    esac
}

main "$@"